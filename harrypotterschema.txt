type Character {
	name: String!
	appearsIn: [Movie]
	actor: Actor!
	house: House
	wand: Wand
}

type Movie {
	title: String!
	release_date: String
}

type Actor {
	name: String!
}

enum House {
	GRYFFINDOR
	HUFFLEPUFF
	RAVENCLAW
	SLYTHERIN
}

type Wand {
	wood: String!
	core: String!
	length: Float!
	description: String
}

type Query {
	wand(id: ID, wood: String(), core: String()): Wand!
	actor(id: ID, name: String()): Actor!
	movie(id: ID, title: String(), releaseDate: String()): Movie!
	character(id: ID, name: String(), actor: String(), house: House(), wand: String()): Character!
	characterAppearsIn(appears_in: ID!): [Character]!
	allCharacters(): [Character]!
}

type Mutation {
	createCharacter(name: String!, appearsIn: [ID], actor: ID!, house: House, wand: ID): Character!
}